/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        conditional_layers {
          compatible = "zmk,conditional-layers";
          tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
          };
        };
    };

    keymap {
            compatible = "zmk,keymap";

            default_layer {
            bindings = <
            &kp PLUS   &kp Q       &kp W        &kp F       &kp P         &kp B           &kp J  &kp L         &kp U       &kp Y        &kp SEMI    &kp PIPE
            &kp ESC    &hm LGUI A  &hm LCTRL R  &hm LALT S  &hm LSHIFT T  &kp G           &kp M  &hm RSHIFT N  &hm RALT E  &hm RCTRL I  &hm LGUI O  &kp EQUAL
            &kp MINUS  &kp Z       &kp X        &kp C       &kp D         &kp V           &kp K  &kp H         &kp COMMA   &kp DOT      &kp FSLH    &kp UNDER
                                                    &kp SQT  &kp TAB  &lt 2 RET           &lt 1 SPACE  &kp BSPC  &kp GRAVE
            >;
            };

            lower_layer {
            bindings = <
            &trans  &kp F1    &kp F2     &kp F3    &kp F4      &kp F5                     &kp F6     &kp F7    &kp F8  &kp F9     &kp F10  &trans
            &trans  &kp LGUI  &kp LCTRL  &kp LALT  &kp LSHIFT  &trans                     &kp LEFT   &kp DOWN  &kp UP  &kp RIGHT  &trans   &trans
            &trans  &trans    &trans     &trans    &trans      &trans                     &trans     &trans    &trans  &trans     &trans   &trans
                                            &kp LALT  &trans  &kp RET                     &kp SPACE  &kp trans  &kp LGUI
            >;
            };

            raise_layer {
            bindings = <
            &trans  &kp EXCL  &kp AT    &kp HASH   &kp DLLR   &kp PRCNT                   &kp CARET  &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &trans
            &trans  &kp N1    &kp N2    &kp N3     &kp N4     &kp N5                      &kp N6     &kp N7    &kp N8           &kp N9    &kp N0    &trans
            &trans  &kp ESC   &kp PLUS  &kp MINUS  &kp EQUAL  &kp UNDER                   &kp LBKT   &kp RBKT  &kp BSLH         &kp LBRC  &kp RBRC  &kp TILDE
                                                 &trans  &trans  &trans                   &trans  &trans  &trans
            >;
            };

            tri_layer {
            bindings = <
            &kp F1      &kp F2      &kp F3      &kp F4        &kp F5        &kp F6        &kp F7    &kp F8    &kp F9  &kp F10    &kp F11  &kp F12
            &trans      &kp C_PREV  &kp C_NEXT  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PP      &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans   &trans
            &bt BT_CLR  &bt BT_PRV  &bt BT_NXT  &trans        &trans        &trans        &trans    &trans    &trans  &trans     &trans   &trans
                                                          &kp LALT  &trans  &kp RET       &kp SPACE  &kp trans  &kp LGUI
            >;
            };
      };
};
